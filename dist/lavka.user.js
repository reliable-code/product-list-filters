// ==UserScript==
// @name         Lavka List Clean
// @description  Remove product cards without discount
// @grant        GM_notification
// @match        https://lavka.yandex.ru/*
// @namespace    https://github.com/reliable-code/product-list-filters
// @version      0.6.73230234
// @icon         https://www.google.com/s2/favicons?sz=64&domain=yandex.ru
// @author       reliable-code
// ==/UserScript==

(()=>{"use strict";function debounce(func,wait=250){let timeoutId;return(...args)=>{clearTimeout(timeoutId);timeoutId=setTimeout((()=>func(...args)),wait)}}


class InputValueBase{constructor(value,onChange){this.value=value;this.onChange=onChange}onChangeIfDefined=()=>{this.onChange&&this.onChange()}}


function getInputValueFromEvent(event){const{target}=event;const{type}=target;switch(type){case"text":return`"${target.value}"`;case"number":return target.value;case"checkbox":return target.checked;default:console.log(`Unknown input type: ${type}`);return null}}


function parseValue(value){return value===""?null:JSON.parse(value)}


const storage=localStorage;function getStorageValueOrDefault(key,defaultValue=null){const localStorageItem=storage.getItem(key);return localStorageItem===null?defaultValue:parseValue(localStorageItem)}class StoredInputValue extends InputValueBase{constructor(storageKey,defaultValue=null,onChange=null){super(getStorageValueOrDefault(storageKey,defaultValue),onChange);this.storageKey=storageKey}updateValueFromEvent=event=>{const newValue=getInputValueFromEvent(event);const newParsedValue=parseValue(newValue);if(this.value===newParsedValue)return;storage.setItem(this.storageKey,newValue);this.value=newParsedValue;this.onChangeIfDefined()}}


function removeNonDigit(stringValue){return stringValue.replace(/\D/g,"")}function removeNonNumber(stringValue){return stringValue.replace(/[^\d.,-]/g,"")}


function getFirstElement(selector,parentNode=document,logNotFound=false){const element=parentNode.querySelector(selector);logNotFound&&!element&&console.log(`No element found for selector: ${selector}`);return element}function helpers_getAllElements(selector,parentNode=document,logNotFound=false){const elements=parentNode.querySelectorAll(selector);logNotFound&&!elements.length&&console.log(`No elements found for selector: ${selector}`);return elements}function getElementInnerNumber(element,cleanText=false,replaceComma=false,defaultValue=null){if(!element){if(defaultValue!==null)return defaultValue;console.log("No element found")}const elementText=element.innerText;return parseNumber(elementText,cleanText,replaceComma)}function parseNumber(text,cleanText,replaceComma){cleanText&&(text=removeNonNumber(text));replaceComma&&(text=text.replace(",","."));const number=+text;return number}function applyStyles(element,styles){Object.entries(styles).forEach((([key,value])=>{element.style[key]=value}))}function createNumberInput(inputOnChange,inputStyle,inputValue,inputStep,inputMinValue,inputMaxValue){const input=createInput("number",inputOnChange,inputStyle);input.value=inputValue;input.step=inputStep;input.min=inputMinValue;input.max=inputMaxValue;return input}function createCheckboxInput(inputOnChange,inputStyle,isChecked){const input=createInput("checkbox",inputOnChange,inputStyle);input.checked=isChecked;return input}function createInput(type=null,inputOnChange=null,style=null){const input=document.createElement("input");type&&(input.type=type);if(inputOnChange){input.addEventListener("keyup",debounce(inputOnChange,200));input.addEventListener("change",debounce(inputOnChange,100))}style&&(input.style=style);return input}
// todo: replace usages with createDiv()
function elementsFactory_createDivObsolete(textContent=null,style=null){const div=document.createElement("div");textContent&&(div.textContent=textContent);style&&(div.style=style);return div}function createDiv(styles={},innerHTML=null){return createElement("div",styles,innerHTML)}function createElement(tagName,styles,innerHTML=null){const element=document.createElement(tagName);Object.keys(styles).length>0&&applyStyles(element,styles);innerHTML&&(element.innerHTML=innerHTML);return element}


function appendFilterControlsIfNeeded(parentNode,appendFiltersContainerFunc,force=false,filtersContainerId="customFiltersContainer"){let filtersContainer=getFirstElement(`#${filtersContainerId}`,parentNode);if(filtersContainer){if(!force)return;filtersContainer.remove()}filtersContainer=createDiv();filtersContainer.id=filtersContainerId;appendFiltersContainerFunc(filtersContainer,parentNode)}function pathnameIncludes(searchString){return window.location.pathname.includes(searchString)}function somePathElementEquals(searchString){const pathElements=window.location.pathname.split("/");return pathElements.some((pathElement=>pathElement===searchString))}function isLessThanFilter(parameterValue,filter){return filter.value&&parameterValue<filter.value}function isGreaterThanFilter(parameterValue,filter){return filter.value&&parameterValue>filter.value}function createFilterControlNumber(titleText,inputValue,inputStep,inputMinValue,inputMaxValue,controlStyle=null,inputStyle=null){const filterControl=elementsFactory_createDivObsolete(titleText,controlStyle);const input=createNumberInput(inputValue.updateValueFromEvent,inputStyle,inputValue.value,inputStep,inputMinValue,inputMaxValue);filterControl.append(input);return filterControl}function createFilterControlCheckbox(titleText,inputValue,controlStyle=null,inputStyle=null){const filterControl=elementsFactory_createDivObsolete(titleText,controlStyle);const input=createCheckboxInput(inputValue.updateValueFromEvent,inputStyle,inputValue.value);filterControl.append(input);return filterControl}function createMinDiscountFilterControl(inputValue,controlStyle=null,inputStyle=null){return createDiscountFilterControlBase("Мин. скидка: ",inputValue,controlStyle,inputStyle)}function createDiscountFilterControlBase(titleText,inputValue,controlStyle=null,inputStyle=null){return createFilterControlNumber(titleText,inputValue,"5","0","100",controlStyle,inputStyle)}function createPriceFilterControlBase(titleText,inputValue,controlStyle,inputStyle,inputStep){return createFilterControlNumber(titleText,inputValue,inputStep,"0","1000000",controlStyle,inputStyle)}function createMaxPriceFilterControl(inputValue,controlStyle=null,inputStyle=null,inputStep="250"){return createPriceFilterControlBase("Макс. цена: ",inputValue,controlStyle,inputStyle,inputStep)}function createEnabledFilterControl(inputValue,controlStyle=null,inputStyle=null){return createFilterControlCheckbox("Вкл: ",inputValue,controlStyle,inputStyle)}


function insertAfter(existingNode,newNode){existingNode.parentNode.insertBefore(newNode,existingNode.nextSibling)}function hideElement(element){setElementDisplayAttributeIfNeeded(element);setElementDisplay(element,"none")}function showElement(element,display){display=display||getElementDisplay(element);setElementDisplay(element,display)}function showHideElement(element,conditionToHide,display){if(conditionToHide)hideElement(element);else{display=display||getElementDisplay(element);showElement(element,display)}}function setElementDisplay(element,display){element.style.display=display}function getElementDisplay(element){setElementDisplayAttributeIfNeeded(element);return element.getAttribute("display")}function setElementDisplayAttributeIfNeeded(element){if(element.hasAttribute("display"))return;const{display}=getComputedStyle(element);element.setAttribute("display",display)}


const minDiscountFilter=new StoredInputValue("min-discount-filter",null,cleanList);const maxPriceFilter=new StoredInputValue("max-price-filter",null,cleanList);const filterEnabled=new StoredInputValue("filter-enabled",true,cleanList);const observerReloadInterval=new StoredInputValue("observer-reload-interval",3.5,runReloadTimerIfNeeded);const minObserverSectionLength=new StoredInputValue("min-observer-section-length",10);const showObserverNotification=new StoredInputValue("show-observer-notification",true);const observerEnabled=new StoredInputValue("observer-enabled",true,runReloadTimerIfNeeded);const MAIN_CONTENT_SELECTOR="#main-content-id";const PRODUCT_CARD_LINK_SELECTOR='[data-type="product-card-link"]';const CONTAINER_STYLE="display: flex;"+"margin-top: 14px;"+"grid-gap: 15px;";const CONTROL_STYLE="display: flex;"+"align-items: center;";const INPUT_STYLE="margin-left: 5px;"+"border: 2px solid #b3bcc5;"+"border-radius: 6px;"+"padding: 6px 10px;";const NUMBER_INPUT_STYLE=INPUT_STYLE+// eslint-disable-line prefer-template
"width: 90px;";const CHECKBOX_INPUT_STYLE="margin-left: 5px;"+"width: 25px;"+"height: 25px;";let mainContent;let firstRun=true;let checkReloadTimerIntervalId;let reloadTimerSecondsLeft=null;let reloadTimerDiv;initMainContent();observeHead();function observeHead(){const observer=new MutationObserver(debounce(initMainContent,750));observer.observe(document.head,{childList:true})}function initMainContent(){mainContent=getFirstElement(MAIN_CONTENT_SELECTOR);if(!mainContent||!pathnameIncludes("category"))return;const observer=new MutationObserver(debounce(initListClean,100));observer.observe(mainContent,{childList:true,subtree:true})}function showSectionNotification(sectionName,sectionLength){const sectionLengthInfo=sectionLength?`
(${sectionLength} товаров)`:"";window.GM_notification({text:`Появился раздел "${sectionName}"${sectionLengthInfo}`,tag:"section-appear",highlight:true,silent:true})}function checkSectionExistsBySelector(sectionSelector,sectionName){const section=getFirstElement(sectionSelector);if(!section)return;const sectionLength=helpers_getAllElements(PRODUCT_CARD_LINK_SELECTOR,section).length;const header=getFirstElement("h2",section);header.innerText+=` (${sectionLength})`;observerEnabled.value&&showObserverNotification.value&&sectionLength>=minObserverSectionLength.value&&showSectionNotification(sectionName,sectionLength)}function runReloadTimerIfNeeded(){reloadTimerSecondsLeft&&(reloadTimerSecondsLeft=null);checkReloadTimerIntervalId&&clearInterval(checkReloadTimerIntervalId);reloadTimerDiv.textContent=null;if(!observerEnabled.value||!observerReloadInterval.value)return;reloadTimerSecondsLeft=observerReloadInterval.value*60;checkReloadTimer();checkReloadTimerIntervalId=setInterval(checkReloadTimer,1e3)}function checkReloadTimer(){reloadTimerDiv.textContent=`До обновления: ${reloadTimerSecondsLeft} c.`;if(reloadTimerSecondsLeft>0){reloadTimerSecondsLeft-=1;return}window.location.reload()}function initListClean(){const productCardLinks=helpers_getAllElements(PRODUCT_CARD_LINK_SELECTOR,mainContent);if(!productCardLinks.length)return;somePathElementEquals("promo_and_cashback")&&appendFilterControlsIfNeeded(mainContent,appendObserverControlsContainer,false,"observerControlsContainer");appendFilterControlsIfNeeded(mainContent,appendFiltersContainer);if(firstRun){firstRun=false;runReloadTimerIfNeeded();checkSectionExistsBySelector('[data-id="promo-expiring-products"]',"Последний день")}cleanList()}function appendFiltersContainer(filtersContainer,parentNode){filtersContainer.style=CONTAINER_STYLE;const minDiscountDiv=createMinDiscountFilterControl(minDiscountFilter,CONTROL_STYLE,NUMBER_INPUT_STYLE);const maxPriceDiv=createMaxPriceFilterControl(maxPriceFilter,CONTROL_STYLE,NUMBER_INPUT_STYLE,"25");const filterEnabledDiv=createEnabledFilterControl(filterEnabled,CONTROL_STYLE,CHECKBOX_INPUT_STYLE);filtersContainer.append(minDiscountDiv,maxPriceDiv,filterEnabledDiv);insertAfter(parentNode.firstChild,filtersContainer)}function appendObserverControlsContainer(observerControlsContainer,parentNode){observerControlsContainer.style=CONTAINER_STYLE;const reloadTimerControlStyle=CONTROL_STYLE+// eslint-disable-line prefer-template
"margin-left: auto;"+"width: 170px;";const observerReloadIntervalDiv=createFilterControlNumber("Обновление, мин.: ",observerReloadInterval,.5,1,60,CONTROL_STYLE,NUMBER_INPUT_STYLE);const minObserverSectionLengthDiv=createFilterControlNumber("Мин. в секции: ",minObserverSectionLength,1,1,50,CONTROL_STYLE,NUMBER_INPUT_STYLE);const showObserverNotificationDiv=createFilterControlCheckbox("Оповещение: ",showObserverNotification,CONTROL_STYLE,CHECKBOX_INPUT_STYLE);const observerEnabledDiv=createEnabledFilterControl(observerEnabled,CONTROL_STYLE,CHECKBOX_INPUT_STYLE);reloadTimerDiv=elementsFactory_createDivObsolete(reloadTimerSecondsLeft,reloadTimerControlStyle);observerControlsContainer.append(observerReloadIntervalDiv,minObserverSectionLengthDiv,showObserverNotificationDiv,observerEnabledDiv,reloadTimerDiv);insertAfter(parentNode.firstChild,observerControlsContainer)}function cleanList(){const productCardLinks=helpers_getAllElements(PRODUCT_CARD_LINK_SELECTOR,mainContent);productCardLinks.forEach((productCardLink=>{const productCardLinksParent=productCardLink.parentNode;const productCard=productCardLinksParent.parentNode.parentNode.parentNode;productCard.style.flex="none";productCard.style.width="25%";if(!filterEnabled.value){showElement(productCard);return}const discountValue=getDiscountValue(productCardLinksParent);const priceWrap=getFirstElement('span [aria-hidden="true"]',productCard);const price=getElementInnerNumber(priceWrap,true);const conditionToHide=isLessThanFilter(discountValue,minDiscountFilter)||isGreaterThanFilter(price,maxPriceFilter);showHideElement(productCard,conditionToHide)}))}function getDiscountValue(productCardLinksParent){const promoLabel=getFirstElement("li",productCardLinksParent);if(!promoLabel)return 0;const promoLabelText=promoLabel.innerText;if(!promoLabelText.includes("%"))return 0;return+removeNonDigit(promoLabelText)}})();