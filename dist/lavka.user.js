// ==UserScript==
// @name         Lavka List Clean
// @description  Remove product cards without discount
// @match        https://lavka.yandex.ru/*
// @namespace    https://github.com/reliable-code/product-list-filters
// @version      0.6.71223728
// @icon         https://www.google.com/s2/favicons?sz=64&domain=yandex.ru
// @author       reliable-code
// ==/UserScript==

(()=>{"use strict";


function getFirstElement(selector,parentNode=document,logNotFound=false){const element=parentNode.querySelector(selector);logNotFound&&!element&&console.log(`No element found for selector: ${selector}`);return element}function getAllElements(selector,parentNode=document,logNotFound=false){const elements=parentNode.querySelectorAll(selector);logNotFound&&!elements.length&&console.log(`No elements found for selector: ${selector}`);return elements}function insertAfter(existingNode,newNode){existingNode.parentNode.insertBefore(newNode,existingNode.nextSibling)}function hideElement(element){setElementDisplay(element,"none")}function showElement(element,display="block"){setElementDisplay(element,display)}function showHideElement(element,conditionToHide,display="block"){conditionToHide?hideElement(element):showElement(element,display)}function setElementDisplay(element,display){element.style.display=display}function createNumberInput(inputOnChange,inputStyle,inputValue,inputStep,inputMinValue,inputMaxValue){const input=createInput("number",inputOnChange,inputStyle);input.value=inputValue;input.step=inputStep;input.min=inputMinValue;input.max=inputMaxValue;return input}function createCheckboxInput(inputOnChange,inputStyle,isChecked){const input=createInput("checkbox",inputOnChange,inputStyle);input.checked=isChecked;return input}function createInput(type=null,inputOnChange=null,style=null){const input=document.createElement("input");type&&(input.type=type);if(inputOnChange){input.addEventListener("keyup",debounce(inputOnChange,200));input.addEventListener("change",debounce(inputOnChange,100))}style&&(input.style=style);return input}function dom_createDiv(textContent=null,style=null){const div=document.createElement("div");textContent&&(div.textContent=textContent);style&&(div.style=style);return div}function debounce(func,wait=250){let timeoutId;return(...args)=>{clearTimeout(timeoutId);timeoutId=setTimeout((()=>func(...args)),wait)}}function getInputValueFromEvent(event){const{target}=event;const{type}=target;switch(type){case"text":return`"${target.value}"`;case"number":return target.value;case"checkbox":return target.checked;default:console.log(`Unknown input type: ${type}`);return null}}class InputValueBase{constructor(value,onChange){this.value=value;this.onChange=onChange}onChangeIfDefined=()=>{this.onChange&&this.onChange()}}function parseValue(value){return value===""?null:JSON.parse(value)}


const storage=localStorage;function getStorageValueOrDefault(key,defaultValue=null){const localStorageItem=storage.getItem(key);return localStorageItem===null?defaultValue:parseValue(localStorageItem)}class StoredInputValue extends InputValueBase{constructor(storageKey,defaultValue=null,onChange=null){super(getStorageValueOrDefault(storageKey,defaultValue),onChange);this.storageKey=storageKey}updateValueFromEvent=event=>{const newValue=getInputValueFromEvent(event);const newParsedValue=parseValue(newValue);if(this.value===newParsedValue)return;storage.setItem(this.storageKey,newValue);this.value=newParsedValue;this.onChangeIfDefined()}}


function removeNonDigit(stringValue){return stringValue.replace(/\D/g,"")}function createFilterControlNumber(titleText,inputValue,inputStep,inputMinValue,inputMaxValue,controlStyle=null,inputStyle=null){const filterControl=dom_createDiv(titleText,controlStyle);const input=createNumberInput(inputValue.updateValueFromEvent,inputStyle,inputValue.value,inputStep,inputMinValue,inputMaxValue);filterControl.append(input);return filterControl}function createFilterControlCheckbox(titleText,inputValue,controlStyle=null,inputStyle=null){const filterControl=dom_createDiv(titleText,controlStyle);const input=createCheckboxInput(inputValue.updateValueFromEvent,inputStyle,inputValue.value);filterControl.append(input);return filterControl}function createMinDiscountFilterControl(inputValue,controlStyle=null,inputStyle=null){return createDiscountFilterControlBase("Мин. скидка: ",inputValue,controlStyle,inputStyle)}function createDiscountFilterControlBase(titleText,inputValue,controlStyle=null,inputStyle=null){return createFilterControlNumber(titleText,inputValue,"5","0","100",controlStyle,inputStyle)}function createEnabledFilterControl(inputValue,controlStyle=null,inputStyle=null){return createFilterControlCheckbox("Вкл: ",inputValue,controlStyle,inputStyle)}function appendFilterControlsIfNeeded(parentNode,appendFiltersContainerFunc,force=false,filtersContainerId="customFiltersContainer"){let filtersContainer=getFirstElement(`#${filtersContainerId}`,parentNode);if(filtersContainer){if(!force)return;filtersContainer.remove()}filtersContainer=dom_createDiv();filtersContainer.id=filtersContainerId;appendFiltersContainerFunc(filtersContainer,parentNode)}function isLessThanFilter(parameterValue,filter){return filter.value&&parameterValue<filter.value}


const minDiscountFilter=new StoredInputValue("min-discount-filter",null,cleanList);const filterEnabled=new StoredInputValue("filter-enabled",true,cleanList);const MAIN_CONTENT_SELECTOR="#main-content-id";const PRODUCT_CARD_LINK_SELECTOR='[data-type="product-card-link"]';let mainContent;initMainContent();observeHead();function observeHead(){const observer=new MutationObserver(debounce(initMainContent));observer.observe(document.head,{childList:true})}function initMainContent(){mainContent=getFirstElement(MAIN_CONTENT_SELECTOR);const observer=new MutationObserver(debounce(initListClean,50));observer.observe(mainContent,{childList:true,subtree:true})}function initListClean(){const productCardLinks=getAllElements(PRODUCT_CARD_LINK_SELECTOR,mainContent);if(productCardLinks.length){appendFilterControlsIfNeeded(mainContent,appendFiltersContainer);cleanList()}}function appendFiltersContainer(filtersContainer,parentNode){filtersContainer.style="display: flex;"+"margin-top: 14px;"+"grid-gap: 15px;";const controlStyle="display: flex;"+"align-items: center;";const inputStyle="margin-left: 5px;"+"border: 2px solid #b3bcc5;"+"border-radius: 6px;"+"padding: 6px 10px;";const numberInputStyle=inputStyle+// eslint-disable-line prefer-template
"width: 90px;";const checkboxInputStyle="margin-left: 5px;"+"width: 25px;"+"height: 25px;";const minDiscountDiv=createMinDiscountFilterControl(minDiscountFilter,controlStyle,numberInputStyle);const filterEnabledDiv=createEnabledFilterControl(filterEnabled,controlStyle,checkboxInputStyle);filtersContainer.append(minDiscountDiv,filterEnabledDiv);insertAfter(parentNode.firstChild,filtersContainer)}function cleanList(){console.log("cleanList");const productCardLinks=getAllElements(PRODUCT_CARD_LINK_SELECTOR,mainContent);console.log(productCardLinks.length);if(!minDiscountFilter.value)return;productCardLinks.forEach((productCardLink=>{const productCardLinksParent=productCardLink.parentNode;const productCard=productCardLinksParent.parentNode.parentNode;productCard.style.flex="none";productCard.style.width="25%";if(!filterEnabled.value){showElement(productCard);return}const promoLabel=getFirstElement("li",productCardLinksParent);if(!promoLabel){hideElement(productCard);return}const promoLabelText=promoLabel.innerText;if(!promoLabelText.includes("%")){hideElement(productCard);return}const discountValue=+removeNonDigit(promoLabelText);const conditionToHide=isLessThanFilter(discountValue,minDiscountFilter);showHideElement(productCard,conditionToHide)}))}})();