// ==UserScript==
// @name         Kazan List Clean
// @description  Remove product cards by filter
// @match        https://kazanexpress.ru/*
// @namespace    https://github.com/reliable-code/product-list-filters
// @version      0.1.71284356
// @icon         https://www.google.com/s2/favicons?sz=64&domain=kazanexpress.ru
// @author       reliable-code
// ==/UserScript==

(()=>{"use strict";function removeNonNumber(stringValue){return stringValue.replace(/[^\d.,-]/g,"")}


function getFirstElement(selector,parentNode=document,logNotFound=false){const element=parentNode.querySelector(selector);logNotFound&&!element&&console.log(`No element found for selector: ${selector}`);return element}function getAllElements(selector,parentNode=document,logNotFound=false){const elements=parentNode.querySelectorAll(selector);logNotFound&&!elements.length&&console.log(`No elements found for selector: ${selector}`);return elements}function hideElement(element){setElementDisplayAttributeIfNeeded(element);setElementDisplay(element,"none")}function showElement(element,display){display=display||getElementDisplay(element);setElementDisplay(element,display)}function showHideElement(element,conditionToHide,display){if(conditionToHide)hideElement(element);else{display=display||getElementDisplay(element);showElement(element,display)}}function setElementDisplay(element,display){element.style.display=display}function getElementDisplay(element){setElementDisplayAttributeIfNeeded(element);return element.getAttribute("display")}function setElementDisplayAttributeIfNeeded(element){if(element.hasAttribute("display"))return;const{display}=getComputedStyle(element);element.setAttribute("display",display)}function createTextInput(inputOnChange,inputStyle,inputValue){const input=createInput("text",inputOnChange,inputStyle);input.value=inputValue;return input}function createNumberInput(inputOnChange,inputStyle,inputValue,inputStep,inputMinValue,inputMaxValue){const input=createInput("number",inputOnChange,inputStyle);input.value=inputValue;input.step=inputStep;input.min=inputMinValue;input.max=inputMaxValue;return input}function createCheckboxInput(inputOnChange,inputStyle,isChecked){const input=createInput("checkbox",inputOnChange,inputStyle);input.checked=isChecked;return input}function createInput(type=null,inputOnChange=null,style=null){const input=document.createElement("input");type&&(input.type=type);if(inputOnChange){input.addEventListener("keyup",debounce(inputOnChange,200));input.addEventListener("change",debounce(inputOnChange,100))}style&&(input.style=style);return input}function createDiv(textContent=null,style=null){const div=document.createElement("div");textContent&&(div.textContent=textContent);style&&(div.style=style);return div}function getElementInnerNumber(element,cleanText=false,replaceComma=false){const elementText=element.innerText;return parseNumber(elementText,cleanText,replaceComma)}function getNodeInnerNumber(node,cleanText=false,replaceComma=false){const nodeText=node.textContent;return parseNumber(nodeText,cleanText,replaceComma)}function parseNumber(text,cleanText,replaceComma){cleanText&&(text=removeNonNumber(text));replaceComma&&(text=text.replace(",","."));const number=+text;return number}function waitForElement(parentNode,selector,timeout=null){return new Promise((resolve=>{const observer=new MutationObserver(mutationCallback);observer.observe(parentNode,{childList:true,subtree:true});let timeoutId=null;timeout&&(timeoutId=setTimeout((()=>{observer.disconnect();console.log(`No element found for selector: ${selector}`);resolve(null)}),timeout));function mutationCallback(){if(parentNode.querySelector(selector)){timeoutId&&clearTimeout(timeoutId);observer.disconnect();resolve(parentNode.querySelector(selector))}}}))}function debounce(func,wait=250){let timeoutId;return(...args)=>{clearTimeout(timeoutId);timeoutId=setTimeout((()=>func(...args)),wait)}}function getInputValueFromEvent(event){const{target}=event;const{type}=target;switch(type){case"text":return`"${target.value}"`;case"number":return target.value;case"checkbox":return target.checked;default:console.log(`Unknown input type: ${type}`);return null}}class InputValueBase{constructor(value,onChange){this.value=value;this.onChange=onChange}onChangeIfDefined=()=>{this.onChange&&this.onChange()}}function parseValue(value){return value===""?null:JSON.parse(value)}function getURLPathElement(position,defaultValue="common",logResult=false){const{pathname}=window.location;return getPathnameElement(pathname,position,defaultValue,logResult)}function getPathnameElement(pathname,position,defaultValue,logResult=false){const pathElements=pathname.split("/");const pathElement=pathElements[position]||defaultValue;logResult&&console.log(`Pathname element: ${pathElement}`);return pathElement}function getURLPathElementEnding(position,defaultValue="common",logResult=false){const pathElement=getURLPathElement(position,"",logResult);return getPathElementEnding(pathElement,defaultValue,logResult)}function getPathElementEnding(pathElement,defaultValue,logResult){if(!pathElement)return defaultValue;const pathElementEnding=pathElement.split("-").at(-1);logResult&&console.log(`Pathname element ending: ${pathElementEnding}`);return pathElementEnding}function pathnameIncludes(searchString){return window.location.pathname.includes(searchString)}


const storage=localStorage;function getStorageValueOrDefault(key,defaultValue=null){const localStorageItem=storage.getItem(key);return localStorageItem===null?defaultValue:parseValue(localStorageItem)}class StoredInputValue extends InputValueBase{constructor(storageKey,defaultValue=null,onChange=null){super(getStorageValueOrDefault(storageKey,defaultValue),onChange);this.storageKey=storageKey}updateValueFromEvent=event=>{const newValue=getInputValueFromEvent(event);const newParsedValue=parseValue(newValue);if(this.value===newParsedValue)return;storage.setItem(this.storageKey,newValue);this.value=newParsedValue;this.onChangeIfDefined()}}


function createFilterControlText(titleText,inputValue,controlStyle=null,inputStyle=null){const filterControl=createDiv(titleText,controlStyle);const input=createTextInput(inputValue.updateValueFromEvent,inputStyle,inputValue.value);filterControl.append(input);return filterControl}function createFilterControlNumber(titleText,inputValue,inputStep,inputMinValue,inputMaxValue,controlStyle=null,inputStyle=null){const filterControl=createDiv(titleText,controlStyle);const input=createNumberInput(inputValue.updateValueFromEvent,inputStyle,inputValue.value,inputStep,inputMinValue,inputMaxValue);filterControl.append(input);return filterControl}function createFilterControlCheckbox(titleText,inputValue,controlStyle=null,inputStyle=null){const filterControl=createDiv(titleText,controlStyle);const input=createCheckboxInput(inputValue.updateValueFromEvent,inputStyle,inputValue.value);filterControl.append(input);return filterControl}function createNameFilterControl(inputValue,controlStyle=null,inputStyle=null){return createFilterControlText("Содержит: ",inputValue,controlStyle,inputStyle)}function createMinRatingFilterControl(inputValue,controlStyle=null,inputStyle=null,inputStep=.1){return createFilterControlNumber("Мин. рейтинг: ",inputValue,inputStep,3,5,controlStyle,inputStyle)}function createMinReviewsFilterControl(inputValue,controlStyle=null,inputStyle=null){return createReviewsFilterControl("Мин. отзывов: ",inputValue,controlStyle,inputStyle)}function createReviewsFilterControl(titleText,inputValue,controlStyle=null,inputStyle=null){return createFilterControlNumber(titleText,inputValue,"1","1","999999",controlStyle,inputStyle)}function createEnabledFilterControl(inputValue,controlStyle=null,inputStyle=null){return createFilterControlCheckbox("Вкл: ",inputValue,controlStyle,inputStyle)}function appendFilterControlsIfNeeded(parentNode,appendFiltersContainerFunc,force=false,filtersContainerId="customFiltersContainer"){let filtersContainer=getFirstElement(`#${filtersContainerId}`,parentNode);if(filtersContainer){if(!force)return;filtersContainer.remove()}filtersContainer=createDiv();filtersContainer.id=filtersContainerId;appendFiltersContainerFunc(filtersContainer,parentNode)}function isNotMatchTextFilter(parameterValue,filter){return!isMatchTextFilter(parameterValue,filter)}function isMatchTextFilter(parameterValue,filter){if(!filter.value)return true;const comparedString=parameterValue.toLowerCase();const searchStrings=filter.value.toLowerCase().split(",").map((searchString=>searchString.trim()));const{include:includeSearchStrings,notInclude:notIncludeSearchStrings}=searchStrings.reduce(((result,searchString)=>{if(searchString.startsWith("!")){const notIncludeSearchString=searchString.substring(1);notIncludeSearchString.length&&result.notInclude.push(notIncludeSearchString)}else result.include.push(searchString);return result}),{include:[],notInclude:[]});return includeSearchStrings.every((searchString=>comparedString.includes(searchString)))&&notIncludeSearchStrings.every((searchString=>!comparedString.includes(searchString)))}function isLessThanFilter(parameterValue,filter){return filter.value&&parameterValue<filter.value}


let nameFilter;let minReviewsFilter;let minRatingFilter;let filterEnabled;const{documentElement}=document;new MutationObserver((()=>{if(documentElement.classList.contains("nprogress-busy"))return;(pathnameIncludes("category")||pathnameIncludes("search"))&&initListClean()})).observe(documentElement,{attributes:true,attributeFilter:["class"]});function initListClean(){waitForElement(document,".notification").then((notification=>{const promotional=getFirstElement(".promotional-shelf",notification);promotional&&promotional.remove();appendFilterControlsIfNeeded(notification,appendFiltersContainer,true);const productCardsWrap=getFirstElement("#category-products",document,true);new MutationObserver(cleanList).observe(productCardsWrap,{childList:true})}))}function appendFiltersContainer(filtersContainer,parentNode){initFilters();filtersContainer.style="display: flex;"+"grid-gap: 11px;"+"margin-bottom: 17px;";const controlStyle="display: flex;"+"align-items: center;"+"font-size: 15px;";const inputStyle="margin-left: 5px;"+"border: 1px solid rgba(0,0,0,.12);"+"border-radius: 4px;"+"color: rgba(0,0,0,.87);"+"font-family: Roboto,sans-serif;"+"font-size: .875rem;"+"padding: 8px 11px;";const textInputStyle=inputStyle+// eslint-disable-line prefer-template
"width: 180px;";const numberInputStyle=inputStyle+// eslint-disable-line prefer-template
"width: 90px;";const checkboxInputStyle="margin-left: 5px;"+"width: 23px;"+"height: 23px;";const nameFilterDiv=createNameFilterControl(nameFilter,controlStyle,textInputStyle);const minReviewsDiv=createMinReviewsFilterControl(minReviewsFilter,controlStyle,numberInputStyle);const minRatingDiv=createMinRatingFilterControl(minRatingFilter,controlStyle,numberInputStyle);const filterEnabledDiv=createEnabledFilterControl(filterEnabled,controlStyle,checkboxInputStyle);filtersContainer.append(nameFilterDiv,minReviewsDiv,minRatingDiv,filterEnabledDiv);parentNode.append(filtersContainer)}function initFilters(){const categoryName=getURLPathElementEnding(2);nameFilter=new StoredInputValue(`${categoryName}-name-filter`,null,cleanList);minReviewsFilter=new StoredInputValue(`${categoryName}-min-reviews-filter`,null,cleanList);minRatingFilter=new StoredInputValue(`${categoryName}-min-rating-filter`,4.8,cleanList);filterEnabled=new StoredInputValue(`${categoryName}-filter-enabled`,true,cleanList)}function cleanList(){const productCardsWrap=getFirstElement("#category-products",document,true);const productCards=getAllElements(":scope > div:not(.products-controllers)",productCardsWrap);productCards.forEach((productCard=>{if(!filterEnabled.value){showElement(productCard);return}const productCardNameWrap=getFirstElement(".subtitle-item",productCard);const productCardRatingWrap=getFirstElement(".orders",productCard);const productCardRating=getFirstElement('[data-test-id="text__rating"]',productCardRatingWrap);if(!productCardNameWrap||!productCardRating){hideElement(productCard);return}const productCardName=productCardNameWrap.innerText;const productCardReviewsNumber=getNodeInnerNumber(productCardRatingWrap.childNodes[1],true);const productCardRatingNumber=getElementInnerNumber(productCardRating,true);const conditionToHide=isNotMatchTextFilter(productCardName,nameFilter)||isLessThanFilter(productCardReviewsNumber,minReviewsFilter)||isLessThanFilter(productCardRatingNumber,minRatingFilter);showHideElement(productCard,conditionToHide)}))}})();