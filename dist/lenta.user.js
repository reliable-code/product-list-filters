// ==UserScript==
// @name         Lenta List Clean
// @description  Remove product cards by filter
// @match        https://*.online.lenta.com/*
// @namespace    https://github.com/reliable-code/product-list-filters
// @version      0.3.70965550
// @icon         https://www.google.com/s2/favicons?sz=64&domain=lenta.com
// @author       reliable-code
// ==/UserScript==

(()=>{"use strict";function removeNonNumber(stringValue){return stringValue.replace(/[^\d.,-]/g,"")}


function getFirstElement(selector,parentNode=document,logNotFound=false){const element=parentNode.querySelector(selector);logNotFound&&!element&&console.log(`No element found for selector: ${selector}`);return element}function getAllElements(selector,parentNode=document,logNotFound=false){const elements=parentNode.querySelectorAll(selector);logNotFound&&!elements.length&&console.log(`No elements found for selector: ${selector}`);return elements}function defineElementOpacity(element,conditionToDefine,opacity=.2){conditionToDefine?setElementOpacity(element,opacity):resetElementOpacity(element)}function resetElementOpacity(element){element.style.opacity=""}function setElementOpacity(element,opacity=.2){element.style.opacity=opacity}function resetElementOrder(element){element.style.order=""}function setElementOrder(element,order){element.style.order=order}function createTextInput(inputOnChange,inputStyle,inputValue){const input=createInput("text",inputOnChange,inputStyle);input.value=inputValue;return input}function createNumberInput(inputOnChange,inputStyle,inputValue,inputStep,inputMinValue,inputMaxValue){const input=createInput("number",inputOnChange,inputStyle);input.value=inputValue;input.step=inputStep;input.min=inputMinValue;input.max=inputMaxValue;return input}function createCheckboxInput(inputOnChange,inputStyle,isChecked){const input=createInput("checkbox",inputOnChange,inputStyle);input.checked=isChecked;return input}function createInput(type=null,inputOnChange=null,style=null){const input=document.createElement("input");type&&(input.type=type);if(inputOnChange){input.addEventListener("keyup",debounce(inputOnChange,200));input.addEventListener("change",debounce(inputOnChange,100))}style&&(input.style=style);return input}function createDiv(textContent=null,style=null){const div=document.createElement("div");textContent&&(div.textContent=textContent);style&&(div.style=style);return div}function getElementInnerNumber(element,cleanText=false,replaceComma=false){const elementText=element.innerText;return parseNumber(elementText,cleanText,replaceComma)}function parseNumber(text,cleanText,replaceComma){cleanText&&(text=removeNonNumber(text));replaceComma&&(text=text.replace(",","."));const number=+text;return number}function debounce(func,wait=250){let timeoutId;return(...args)=>{clearTimeout(timeoutId);timeoutId=setTimeout((()=>func(...args)),wait)}}function getInputValueFromEvent(event){const{target}=event;const{type}=target;switch(type){case"text":return`"${target.value}"`;case"number":return target.value;case"checkbox":return target.checked;default:console.log(`Unknown input type: ${type}`);return null}}class InputValueBase{constructor(value,onChange){this.value=value;this.onChange=onChange}onChangeIfDefined=()=>{this.onChange&&this.onChange()}}function parseValue(value){return value===""?null:JSON.parse(value)}


const storage=localStorage;function getStorageValueOrDefault(key,defaultValue=null){const localStorageItem=storage.getItem(key);return localStorageItem===null?defaultValue:parseValue(localStorageItem)}class StoredInputValue extends InputValueBase{constructor(storageKey,defaultValue=null,onChange=null){super(getStorageValueOrDefault(storageKey,defaultValue),onChange);this.storageKey=storageKey}updateValueFromEvent=event=>{const newValue=getInputValueFromEvent(event);const newParsedValue=parseValue(newValue);if(this.value===newParsedValue)return;storage.setItem(this.storageKey,newValue);this.value=newParsedValue;this.onChangeIfDefined()}}


function createFilterControlText(titleText,inputValue,controlStyle=null,inputStyle=null){const filterControl=createDiv(titleText,controlStyle);const input=createTextInput(inputValue.updateValueFromEvent,inputStyle,inputValue.value);filterControl.append(input);return filterControl}function createFilterControlNumber(titleText,inputValue,inputStep,inputMinValue,inputMaxValue,controlStyle=null,inputStyle=null){const filterControl=createDiv(titleText,controlStyle);const input=createNumberInput(inputValue.updateValueFromEvent,inputStyle,inputValue.value,inputStep,inputMinValue,inputMaxValue);filterControl.append(input);return filterControl}function createFilterControlCheckbox(titleText,inputValue,controlStyle=null,inputStyle=null){const filterControl=createDiv(titleText,controlStyle);const input=createCheckboxInput(inputValue.updateValueFromEvent,inputStyle,inputValue.value);filterControl.append(input);return filterControl}function createNameFilterControl(inputValue,controlStyle=null,inputStyle=null){return createFilterControlText("Содержит: ",inputValue,controlStyle,inputStyle)}function createMinRatingFilterControl(inputValue,controlStyle=null,inputStyle=null,inputStep=.1){return createFilterControlNumber("Мин. рейтинг: ",inputValue,inputStep,3,5,controlStyle,inputStyle)}function createDiscountFilterControl(inputValue,controlStyle=null,inputStyle=null){return createDiscountFilterControlBase("Скидка: ",inputValue,controlStyle,inputStyle)}function createDiscountFilterControlBase(titleText,inputValue,controlStyle=null,inputStyle=null){return createFilterControlNumber(titleText,inputValue,"5","0","100",controlStyle,inputStyle)}function createNoRatingFilterControl(inputValue,controlStyle=null,inputStyle=null){return createFilterControlCheckbox("Без рейтинга: ",inputValue,controlStyle,inputStyle)}function createEnabledFilterControl(inputValue,controlStyle=null,inputStyle=null){return createFilterControlCheckbox("Вкл: ",inputValue,controlStyle,inputStyle)}function appendFilterControlsIfNeeded(parentNode,appendFiltersContainerFunc,force=false,filtersContainerId="customFiltersContainer"){let filtersContainer=getFirstElement(`#${filtersContainerId}`,parentNode);if(filtersContainer){if(!force)return;filtersContainer.remove()}filtersContainer=createDiv();filtersContainer.id=filtersContainerId;appendFiltersContainerFunc(filtersContainer,parentNode)}function isNotMatchTextFilter(parameterValue,filter){return!isMatchTextFilter(parameterValue,filter)}function isMatchTextFilter(parameterValue,filter){if(!filter.value)return true;const comparedString=parameterValue.toLowerCase();const searchStrings=filter.value.toLowerCase().split(",").map((searchString=>searchString.trim()));const{include:includeSearchStrings,notInclude:notIncludeSearchStrings}=searchStrings.reduce(((result,searchString)=>{if(searchString.startsWith("!")){const notIncludeSearchString=searchString.substring(1);notIncludeSearchString.length&&result.notInclude.push(notIncludeSearchString)}else result.include.push(searchString);return result}),{include:[],notInclude:[]});return includeSearchStrings.every((searchString=>comparedString.includes(searchString)))&&notIncludeSearchStrings.every((searchString=>!comparedString.includes(searchString)))}function isLessThanFilter(parameterValue,filter){return filter.value&&parameterValue<filter.value}


const CATEGORY_NAME=getCategoryName();const nameFilter=new StoredInputValue(`${CATEGORY_NAME}-name-filter`,null);const minRatingFilter=new StoredInputValue(`${CATEGORY_NAME}-min-rating-filter`,4.1);const discountAmount=new StoredInputValue("discount-amount",25);const noRatingFilter=new StoredInputValue(`${CATEGORY_NAME}-no-rating-filter`,false);const filterEnabled=new StoredInputValue(`${CATEGORY_NAME}-filter-enabled`,true);const sortEnabled=new StoredInputValue("sort-enabled",true);const PRODUCT_CARD_LIST_SELECTOR=".catalog-list";const PRODUCT_CARD_SELECTOR=".catalog-grid__item";const PRODUCT_CARD_RATING_SELECTOR=".rating-number";const PRICE_ROUNDED_CLASS="priceRounded";function getCategoryName(){const{pathname}=window.location;const pathElements=pathname.split("/");const lastPathElement=pathElements.pop();const categoryName=/^\d+$/.test(lastPathElement)?lastPathElement:"common";return categoryName}setInterval(initListClean,100);function initListClean(){const productCardList=getFirstElement(PRODUCT_CARD_LIST_SELECTOR);if(productCardList){appendFilterControlsIfNeeded(productCardList,appendFiltersContainer);cleanList()}else attachOrderItemsRemoveFunctionIfNeeded()}function attachOrderItemsRemoveFunctionIfNeeded(){const orderPage=getFirstElement("lu-profile-order-page");if(!orderPage)return;const orderItems=getAllElements("lu-profile-order-item",orderPage);orderItems.forEach((orderItem=>{const orderItemWrap=orderItem.parentNode;orderItemWrap.onclick=()=>orderItemWrap.remove()}))}function appendFiltersContainer(filtersContainer,parentNode){filtersContainer.style="display: flex;"+"grid-gap: 15px;"+"margin-left: 10px;";const controlStyle="display: flex;"+"align-items: center;";const inputStyle="margin-left: 5px;"+"border: 1px solid #C9C9C9;"+"border-radius: 8px;"+"height: 40px;"+"padding: 0 16px;";const textInputStyle=inputStyle+// eslint-disable-line prefer-template
"width: 170px;";const numberInputStyle=inputStyle;// eslint-disable-line prefer-template
const checkboxInputStyle="margin-left: 5px;"+"border: 1px solid #C9C9C9;"+"border-radius: 4px;"+"width: 22px;"+"height: 22px;";const nameFilterDiv=createNameFilterControl(nameFilter,controlStyle,textInputStyle);const minRatingDiv=createMinRatingFilterControl(minRatingFilter,controlStyle,numberInputStyle);const discountAmountDiv=createDiscountFilterControl(discountAmount,controlStyle,numberInputStyle);const noRatingDiv=createNoRatingFilterControl(noRatingFilter,controlStyle,checkboxInputStyle);const filterEnabledDiv=createEnabledFilterControl(filterEnabled,controlStyle,checkboxInputStyle);const sortEnabledDiv=createFilterControlCheckbox("Сортировка:",sortEnabled,controlStyle,checkboxInputStyle);filtersContainer.append(nameFilterDiv,minRatingDiv,discountAmountDiv,noRatingDiv,filterEnabledDiv,sortEnabledDiv);parentNode.prepend(filtersContainer)}function cleanList(){const productCards=getAllElements(PRODUCT_CARD_SELECTOR);productCards.forEach((productCard=>{const productCardNameWrap=getFirstElement(".lu-product-card-name-wrapper",productCard);let productCardName="";if(productCardNameWrap){expandProductCardName(productCardNameWrap);productCardName=productCardNameWrap.innerText}const productCardPrice=getFirstElement(".main-price",productCard,true);if(!productCardPrice)return;const priceValue=getPriceValueAttribute(productCard,productCardPrice);let discountedPriceValue;let discountAttributeChanged=false;if(discountAmount.value!==null){discountAttributeChanged=setDiscountAttributesIfNeeded(productCard,productCardPrice,priceValue);discountedPriceValue=productCard.getAttribute("discounted-price")}setRoundedPriceIfNeeded(productCardPrice,priceValue,discountedPriceValue,discountAttributeChanged);if(sortEnabled.value){const productCardOrder=discountedPriceValue||priceValue;setElementOrder(productCard,productCardOrder)}else resetElementOrder(productCard);if(!filterEnabled.value){resetElementOpacity(productCard);return}const productCardRating=getFirstElement(PRODUCT_CARD_RATING_SELECTOR,productCard);const minRatingIsNotMatchFilter=productCardRating?isLessThanFilter(getElementInnerNumber(productCardRating),minRatingFilter):!noRatingFilter.value;const conditionToDefine=isNotMatchTextFilter(productCardName,nameFilter)||minRatingIsNotMatchFilter;defineElementOpacity(productCard,conditionToDefine)}))}function expandProductCardName(productCardNameWrap){productCardNameWrap.style.height="55px";productCardNameWrap.firstChild.style.height="55px"}function getPriceValueAttribute(productCard,productCardPrice){productCard.hasAttribute("price")||addPriceAttribute(productCard,productCardPrice);return productCard.getAttribute("price")}function addPriceAttribute(productCard,productCardPrice){const priceValue=getElementInnerNumber(productCardPrice,true,true);productCard.setAttribute("price",priceValue.toFixed())}function setDiscountAttributesIfNeeded(productCard,productCardPrice,priceValue){if(productCardPrice.classList.contains("__accent"))return false;if(productCard.hasAttribute("discount")){const lastDiscountValue=+productCard.getAttribute("discount");if(lastDiscountValue===discountAmount.value)return false}if(discountAmount.value===0){productCard.removeAttribute("discount");productCard.removeAttribute("discounted-price")}else{setDiscountAttribute(productCard);setDiscountedPriceAttribute(productCard,priceValue)}return true}function setDiscountAttribute(productCard){productCard.setAttribute("discount",discountAmount.value)}function setDiscountedPriceAttribute(productCard,priceValue){const discountedPrice=(priceValue*((100-discountAmount.value)/100)).toFixed();productCard.setAttribute("discounted-price",discountedPrice)}function setRoundedPriceIfNeeded(productCardPrice,priceValue,discountedPriceValue,discountAttributeChanged){if(!discountAttributeChanged&&productCardPrice.classList.contains(PRICE_ROUNDED_CLASS))return;const priceText=discountedPriceValue?`${priceValue} (${discountedPriceValue}) ₽`:`${priceValue} ₽`;productCardPrice.innerText=priceText;productCardPrice.classList.add(PRICE_ROUNDED_CLASS)}})();