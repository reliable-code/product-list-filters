// ==UserScript==
// @name         Pepper List Clean
// @description  Remove product cards by filter
// @match        https://www.pepper.ru/*
// @namespace    https://github.com/reliable-code/product-list-filters
// @version      0.3.73185097
// @icon         https://www.google.com/s2/favicons?sz=64&domain=pepper.ru
// @author       reliable-code
// ==/UserScript==

(()=>{"use strict";


class InputValueBase{constructor(value,onChange){this.value=value;this.onChange=onChange}onChangeIfDefined=()=>{this.onChange&&this.onChange()}}function removeNonNumber(stringValue){return stringValue.replace(/[^\d.,-]/g,"")}


function helpers_getFirstElement(selector,parentNode=document,logNotFound=false){const element=parentNode.querySelector(selector);logNotFound&&!element&&console.log(`No element found for selector: ${selector}`);return element}function getAllElements(selector,parentNode=document,logNotFound=false){const elements=parentNode.querySelectorAll(selector);logNotFound&&!elements.length&&console.log(`No elements found for selector: ${selector}`);return elements}function getElementInnerNumber(element,cleanText=false,replaceComma=false,defaultValue=null){if(!element){if(defaultValue!==null)return defaultValue;console.log("No element found")}const elementText=element.innerText;return parseNumber(elementText,cleanText,replaceComma)}function parseNumber(text,cleanText,replaceComma){cleanText&&(text=removeNonNumber(text));replaceComma&&(text=text.replace(",","."));const number=+text;return number}function getInputValueFromEvent(event){const{target}=event;const{type}=target;switch(type){case"text":return`"${target.value}"`;case"number":return target.value;case"checkbox":return target.checked;default:console.log(`Unknown input type: ${type}`);return null}}function parseValue(value){return value===""?null:JSON.parse(value)}


const storage=localStorage;function getStorageValueOrDefault(key,defaultValue=null){const localStorageItem=storage.getItem(key);return localStorageItem===null?defaultValue:parseValue(localStorageItem)}class StoredInputValue extends InputValueBase{constructor(storageKey,defaultValue=null,onChange=null){super(getStorageValueOrDefault(storageKey,defaultValue),onChange);this.storageKey=storageKey}updateValueFromEvent=event=>{const newValue=getInputValueFromEvent(event);const newParsedValue=parseValue(newValue);if(this.value===newParsedValue)return;storage.setItem(this.storageKey,newValue);this.value=newParsedValue;this.onChangeIfDefined()}}function debounce(func,wait=250){let timeoutId;return(...args)=>{clearTimeout(timeoutId);timeoutId=setTimeout((()=>func(...args)),wait)}}function createNumberInput(inputOnChange,inputStyle,inputValue,inputStep,inputMinValue,inputMaxValue){const input=createInput("number",inputOnChange,inputStyle);input.value=inputValue;input.step=inputStep;input.min=inputMinValue;input.max=inputMaxValue;return input}function createCheckboxInput(inputOnChange,inputStyle,isChecked){const input=createInput("checkbox",inputOnChange,inputStyle);input.checked=isChecked;return input}function createInput(type=null,inputOnChange=null,style=null){const input=document.createElement("input");type&&(input.type=type);if(inputOnChange){input.addEventListener("keyup",debounce(inputOnChange,200));input.addEventListener("change",debounce(inputOnChange,100))}style&&(input.style=style);return input}function elementsFactory_createDiv(textContent=null,style=null){const div=document.createElement("div");textContent&&(div.textContent=textContent);style&&(div.style=style);return div}


function appendFilterControlsIfNeeded(parentNode,appendFiltersContainerFunc,force=false,filtersContainerId="customFiltersContainer"){let filtersContainer=helpers_getFirstElement(`#${filtersContainerId}`,parentNode);if(filtersContainer){if(!force)return;filtersContainer.remove()}filtersContainer=elementsFactory_createDiv();filtersContainer.id=filtersContainerId;appendFiltersContainerFunc(filtersContainer,parentNode)}


class InputValue extends InputValueBase{constructor(defaultValue=null,onChange=null){super(defaultValue,onChange)}updateValueFromEvent=event=>{const newParsedValue=parseValue(getInputValueFromEvent(event));if(this.value===newParsedValue)return;this.value=newParsedValue;this.onChangeIfDefined()}}function isLessThanFilter(parameterValue,filter){return filter.value&&parameterValue<filter.value}function createFilterControlNumber(titleText,inputValue,inputStep,inputMinValue,inputMaxValue,controlStyle=null,inputStyle=null){const filterControl=elementsFactory_createDiv(titleText,controlStyle);const input=createNumberInput(inputValue.updateValueFromEvent,inputStyle,inputValue.value,inputStep,inputMinValue,inputMaxValue);filterControl.append(input);return filterControl}function createFilterControlCheckbox(titleText,inputValue,controlStyle=null,inputStyle=null){const filterControl=elementsFactory_createDiv(titleText,controlStyle);const input=createCheckboxInput(inputValue.updateValueFromEvent,inputStyle,inputValue.value);filterControl.append(input);return filterControl}function createMinVotesFilterControl(inputValue,controlStyle=null,inputStyle=null){return createFilterControlNumber("Минимально голосов: ",inputValue,"50","0","10000",controlStyle,inputStyle)}function createEnabledFilterControl(inputValue,controlStyle=null,inputStyle=null){return createFilterControlCheckbox("Вкл: ",inputValue,controlStyle,inputStyle)}function defineElementOpacity(element,conditionToDefine,opacity=.2){conditionToDefine?setElementOpacity(element,opacity):resetElementOpacity(element)}function resetElementOpacity(element){element.style.opacity=""}function setElementOpacity(element,opacity=.2){element.style.opacity=opacity}


const minVotesFilter=new InputValue(50);const showExpiredFilter=new StoredInputValue("show-expired-filter",false);const filterEnabled=new StoredInputValue("filter-enabled",true);const PRODUCT_CARD_CONTAINER_SELECTOR="#deals-container";const PRODUCT_CARD_SELECTOR=".deal-card";const PRODUCT_CARD_RATING_SELECTOR=".common-box span";setInterval(initListClean,100);
// makeDiscussionsSticky();
const productCardList=helpers_getFirstElement(PRODUCT_CARD_CONTAINER_SELECTOR);function initListClean(){const productCards=getAllElements(PRODUCT_CARD_SELECTOR);if(productCardList&&productCards.length){appendFilterControlsIfNeeded(productCardList,appendFiltersContainer);cleanList(productCards)}}function appendFiltersContainer(filtersContainer,parentNode){filtersContainer.style="display: flex;"+"grid-gap: 15px;"+"padding: 11px 19px;"+"margin-bottom: .5rem;"+"background-color: #fff;"+"border-width: 1px;"+"border-color: rgb(229 229 229);"+"border-radius: 10px;"+"position: sticky;"+"z-index: 11;"+"top: -1px;";const controlStyle="display: flex;"+"align-items: center;";const inputStyle="border: 1px solid #d1d5db;"+"border-radius: 8px;"+"margin-left: 7px;";const numberInputStyle=inputStyle+// eslint-disable-line prefer-template
"padding: 7px 14px;"+"background-color: #fff;";const checkboxInputStyle=inputStyle+// eslint-disable-line prefer-template
"width: 24px;"+"height: 24px;";const minVotesDiv=createMinVotesFilterControl(minVotesFilter,controlStyle,numberInputStyle);const showExpiredDiv=createFilterControlCheckbox("Завершённые: ",showExpiredFilter,controlStyle,checkboxInputStyle);const filterEnabledDiv=createEnabledFilterControl(filterEnabled,controlStyle,checkboxInputStyle);filtersContainer.append(minVotesDiv,showExpiredDiv,filterEnabledDiv);parentNode.prepend(filtersContainer)}function cleanList(productCards){productCards.forEach((productCard=>{if(!filterEnabled.value){resetElementOpacity(productCard);return}const isExpired=productCard.classList.contains("expired-view");if(isExpired&&!showExpiredFilter.value){setElementOpacity(productCard);return}const productCardRating=helpers_getFirstElement(PRODUCT_CARD_RATING_SELECTOR,productCard);if(productCardRating.innerText.includes("Новое"))return;const productCardRatingNumber=getElementInnerNumber(productCardRating,true);const conditionToDefine=isLessThanFilter(productCardRatingNumber,minVotesFilter);defineElementOpacity(productCard,conditionToDefine)}))}})();