// ==UserScript==
// @name         Megamarket List Clean
// @description  Remove product cards by filter
// @grant        GM_addValueChangeListener
// @grant        GM_setValue
// @grant        GM_getValue
// @match        https://megamarket.ru/*
// @namespace    https://github.com/reliable-code/product-list-filters
// @version      0.1.73211430
// @icon         https://www.google.com/s2/favicons?sz=64&domain=megamarket.ru
// @author       reliable-code
// ==/UserScript==

(()=>{"use strict";


function waitForElement(parentNode,selector,timeout=null){return new Promise((resolve=>{const existingElement=parentNode.querySelector(selector);if(existingElement){resolve(existingElement);return}const observer=new MutationObserver(mutationCallback);observer.observe(parentNode,{childList:true,subtree:true});let timeoutId=null;timeout&&(timeoutId=setTimeout((()=>{observer.disconnect();console.log(`No element found for selector: ${selector}`);resolve(null)}),timeout));function mutationCallback(){if(parentNode.querySelector(selector)){timeoutId&&clearTimeout(timeoutId);observer.disconnect();resolve(parentNode.querySelector(selector))}}}))}function debounce(func,wait=250){let timeoutId;return(...args)=>{clearTimeout(timeoutId);timeoutId=setTimeout((()=>func(...args)),wait)}}


function createTextInput(inputOnChange,inputStyle,inputValue){const input=createInput("text",inputOnChange,inputStyle);input.value=inputValue;return input}function createNumberInput(inputOnChange,inputStyle,inputValue,inputStep,inputMinValue,inputMaxValue){const input=createInput("number",inputOnChange,inputStyle);input.value=inputValue;input.step=inputStep;input.min=inputMinValue;input.max=inputMaxValue;return input}function createCheckboxInput(inputOnChange,inputStyle,isChecked){const input=createInput("checkbox",inputOnChange,inputStyle);input.checked=isChecked;return input}function createInput(type=null,inputOnChange=null,style=null){const input=document.createElement("input");type&&(input.type=type);if(inputOnChange){input.addEventListener("keyup",debounce(inputOnChange,200));input.addEventListener("change",debounce(inputOnChange,100))}style&&(input.style=style);return input}function createDiv(textContent=null,style=null){const div=document.createElement("div");textContent&&(div.textContent=textContent);style&&(div.style=style);return div}function removeNonNumber(stringValue){return stringValue.replace(/[^\d.,-]/g,"")}


function getFirstElement(selector,parentNode=document,logNotFound=false){const element=parentNode.querySelector(selector);logNotFound&&!element&&console.log(`No element found for selector: ${selector}`);return element}function getAllElements(selector,parentNode=document,logNotFound=false){const elements=parentNode.querySelectorAll(selector);logNotFound&&!elements.length&&console.log(`No elements found for selector: ${selector}`);return elements}function getElementInnerNumber(element,cleanText=false,replaceComma=false,defaultValue=null){if(!element){if(defaultValue!==null)return defaultValue;console.log("No element found")}const elementText=element.innerText;return parseNumber(elementText,cleanText,replaceComma)}function parseNumber(text,cleanText,replaceComma){cleanText&&(text=removeNonNumber(text));replaceComma&&(text=text.replace(",","."));const number=+text;return number}


function appendFilterControlsIfNeeded(parentNode,appendFiltersContainerFunc,force=false,filtersContainerId="customFiltersContainer"){let filtersContainer=getFirstElement(`#${filtersContainerId}`,parentNode);if(filtersContainer){if(!force)return;filtersContainer.remove()}filtersContainer=createDiv();filtersContainer.id=filtersContainerId;appendFiltersContainerFunc(filtersContainer,parentNode)}


class InputValueBase{constructor(value,onChange){this.value=value;this.onChange=onChange}onChangeIfDefined=()=>{this.onChange&&this.onChange()}}


function getInputValueFromEvent(event){const{target}=event;const{type}=target;switch(type){case"text":return`"${target.value}"`;case"number":return target.value;case"checkbox":return target.checked;default:console.log(`Unknown input type: ${type}`);return null}}


function parseValue(value){return value===""?null:JSON.parse(value)}


const setStorageValue=window.GM_setValue;const getStorageValue=window.GM_getValue;window.GM_addValueChangeListener;class StoredInputValue extends InputValueBase{constructor(storageKey,defaultValue=null,onChange=null){super(getStorageValue(storageKey,defaultValue),onChange);this.storageKey=storageKey}updateValueFromEvent=event=>{const newValue=getInputValueFromEvent(event);const newParsedValue=parseValue(newValue);if(this.value===newParsedValue)return;setStorageValue(this.storageKey,newParsedValue);this.value=newParsedValue;this.onChangeIfDefined()}}


const PRICE_ATTR="price";const BALANCED_CASHBACK_PRICE_ATTR="balanced-cashback-price";const COUPON_ATTR="applied-coupon";function addBalancedCashbackPriceIfNeeded(priceParent,priceSelector,cashbackNumber,couponValue){const priceElement=getFirstElement(priceSelector,priceParent);const couponValueChanged=checkCouponValueChanged(priceElement,couponValue);!couponValueChanged&&priceElement.hasAttribute(BALANCED_CASHBACK_PRICE_ATTR)||addBalancedCashbackPrice(priceElement,cashbackNumber,couponValue);return priceElement}function checkCouponValueChanged(priceElement,couponValue){if(priceElement.hasAttribute(COUPON_ATTR)){const oldCouponValue=+priceElement.getAttribute(COUPON_ATTR);return couponValue!==oldCouponValue}return!!couponValue}function addBalancedCashbackPrice(priceElement,cashbackNumber,couponValue){let priceNumber=getPriceNumber(priceElement);priceElement.setAttribute(PRICE_ATTR,priceNumber);if(couponValue){couponValue<1?priceNumber=(priceNumber*(1-couponValue)).toFixed():priceNumber-=couponValue;priceElement.setAttribute(COUPON_ATTR,couponValue)}else priceElement.removeAttribute(COUPON_ATTR);const balancedCashbackUsage=getBalancedCashbackUsage(priceNumber,cashbackNumber);const balancedCashbackPrice=priceNumber-balancedCashbackUsage;priceElement.setAttribute(BALANCED_CASHBACK_PRICE_ATTR,balancedCashbackPrice);const newPriceElementText=`${priceNumber.toLocaleString()} (${balancedCashbackPrice.toLocaleString()}) ₽`;priceElement.innerText=newPriceElementText;priceElement.title=`-${balancedCashbackUsage.toLocaleString()}`}function getPriceNumber(priceElement){if(priceElement.hasAttribute(PRICE_ATTR))return+priceElement.getAttribute(PRICE_ATTR);return getElementInnerNumber(priceElement,true)}function getBalancedCashbackUsage(price,cashback){const cashbackCoeff=cashback/100;return(price*cashbackCoeff/(1+cashbackCoeff)).toFixed(0)}


function getURLPathElement(position,defaultValue="common",logResult=false){const{pathname}=window.location;return getPathnameElement(pathname,position,defaultValue,logResult)}function getPathnameElement(pathname,position,defaultValue,logResult=false){const pathElements=pathname.split("/");const pathElement=pathElements[position]||defaultValue;logResult&&console.log(`Pathname element: ${pathElement}`);return pathElement}function getURLPathElementEnding(position,defaultValue="common",logResult=false){const pathElement=getURLPathElement(position,"",logResult);return getPathElementEnding(pathElement,defaultValue,logResult)}function getPathElementEnding(pathElement,defaultValue,logResult){if(!pathElement)return defaultValue;const pathElementEnding=pathElement.split("-").at(-1);logResult&&console.log(`Pathname element ending: ${pathElementEnding}`);return pathElementEnding}function pathnameIncludes(searchString){return window.location.pathname.includes(searchString)}


class InputValue extends InputValueBase{constructor(defaultValue=null,onChange=null){super(defaultValue,onChange)}updateValueFromEvent=event=>{const newParsedValue=parseValue(getInputValueFromEvent(event));if(this.value===newParsedValue)return;this.value=newParsedValue;this.onChangeIfDefined()}}


function isNotMatchTextFilter(parameterValue,filter){return!isMatchTextFilter(parameterValue,filter)}function isMatchTextFilter(parameterValue,filter){if(!filter.value)return true;const comparedString=parameterValue.toLowerCase();const searchStrings=filter.value.toLowerCase().split(",").map((searchString=>searchString.trim()));const{include:includeSearchStrings,notInclude:notIncludeSearchStrings}=searchStrings.reduce(((result,searchString)=>{if(searchString.startsWith("!")){const notIncludeSearchString=searchString.substring(1);notIncludeSearchString.length&&result.notInclude.push(notIncludeSearchString)}else result.include.push(searchString);return result}),{include:[],notInclude:[]});return includeSearchStrings.every((searchString=>comparedString.includes(searchString)))&&notIncludeSearchStrings.every((searchString=>!comparedString.includes(searchString)))}function isLessThanFilter(parameterValue,filter){return filter.value&&parameterValue<filter.value}function isGreaterThanFilter(parameterValue,filter){return filter.value&&parameterValue>filter.value}


function createFilterControlText(titleText,inputValue,controlStyle=null,inputStyle=null){const filterControl=createDiv(titleText,controlStyle);const input=createTextInput(inputValue.updateValueFromEvent,inputStyle,inputValue.value);filterControl.append(input);return filterControl}function createFilterControlNumber(titleText,inputValue,inputStep,inputMinValue,inputMaxValue,controlStyle=null,inputStyle=null){const filterControl=createDiv(titleText,controlStyle);const input=createNumberInput(inputValue.updateValueFromEvent,inputStyle,inputValue.value,inputStep,inputMinValue,inputMaxValue);filterControl.append(input);return filterControl}function createFilterControlCheckbox(titleText,inputValue,controlStyle=null,inputStyle=null){const filterControl=createDiv(titleText,controlStyle);const input=createCheckboxInput(inputValue.updateValueFromEvent,inputStyle,inputValue.value);filterControl.append(input);return filterControl}function createNameFilterControl(inputValue,controlStyle=null,inputStyle=null){return createFilterControlText("Содержит: ",inputValue,controlStyle,inputStyle)}function createSellerNameFilterControl(inputValue,controlStyle=null,inputStyle=null){return createFilterControlText("Продавец: ",inputValue,controlStyle,inputStyle)}function createMinRatingFilterControl(inputValue,controlStyle=null,inputStyle=null,inputStep=.1){return createFilterControlNumber("Мин. рейтинг: ",inputValue,inputStep,3,5,controlStyle,inputStyle)}function createMinDiscountFilterControl(inputValue,controlStyle=null,inputStyle=null){return createDiscountFilterControlBase("Мин. скидка: ",inputValue,controlStyle,inputStyle)}function createDiscountFilterControlBase(titleText,inputValue,controlStyle=null,inputStyle=null){return createFilterControlNumber(titleText,inputValue,"5","0","100",controlStyle,inputStyle)}function createMinCashbackFilterControl(inputValue,controlStyle=null,inputStyle=null){return createFilterControlNumber("Мин. кешбек: ",inputValue,"5","0","100",controlStyle,inputStyle)}function createPriceFilterControlBase(titleText,inputValue,controlStyle,inputStyle,inputStep){return createFilterControlNumber(titleText,inputValue,inputStep,"0","1000000",controlStyle,inputStyle)}function createCouponValueControl(inputValue,controlStyle,inputStyle){return createFilterControlNumber("Купон: ",inputValue,"500","0","100000",controlStyle,inputStyle)}function createMaxPriceFilterControl(inputValue,controlStyle=null,inputStyle=null,inputStep="250"){return createPriceFilterControlBase("Макс. цена: ",inputValue,controlStyle,inputStyle,inputStep)}function createMaxDiscountedPriceFilterControl(inputValue,controlStyle=null,inputStyle=null){return createPriceFilterControlBase("Макс. цена со скидкой: ",inputValue,controlStyle,inputStyle,"250")}function createEnabledFilterControl(inputValue,controlStyle=null,inputStyle=null){return createFilterControlCheckbox("Вкл: ",inputValue,controlStyle,inputStyle)}function hideElement(element){setElementDisplayAttributeIfNeeded(element);setElementDisplay(element,"none")}function showElement(element,display){display=display||getElementDisplay(element);setElementDisplay(element,display)}function showHideElement(element,conditionToHide,display){if(conditionToHide)hideElement(element);else{display=display||getElementDisplay(element);showElement(element,display)}}function setElementDisplay(element,display){element.style.display=display}function getElementDisplay(element){setElementDisplayAttributeIfNeeded(element);return element.getAttribute("display")}function setElementDisplayAttributeIfNeeded(element){if(element.hasAttribute("display"))return;const{display}=getComputedStyle(element);element.setAttribute("display",display)}


const PRODUCT_NAME=getURLPathElementEnding(3);const minCashbackFilter=new StoredInputValue(`${PRODUCT_NAME}-min-cashback-filter`,null,cleanOffers);const maxPriceFilter=new StoredInputValue(`${PRODUCT_NAME}-max-price-filter`,null,cleanOffers);const maxDiscountedPriceFilter=new StoredInputValue(`${PRODUCT_NAME}-max-discounted-price-filter`,null,cleanOffers);const minSellerRatingFilter=new StoredInputValue("min-seller-rating-filter",null,cleanOffers);const couponValue=new InputValue(null,cleanOffers);const filterEnabled=new StoredInputValue("filter-enabled",false,cleanOffers);function initProductPageMods(){executeProductPageMods();waitForElement(document,"#app").then((app=>{const observer=new MutationObserver(debounce(executeProductPageMods));observer.observe(app,{childList:true})}))}function executeProductPageMods(){waitForElement(document,".pdp-prices-filter").then((offersFilter=>{appendFilterControlsIfNeeded(offersFilter,appendFiltersContainer);cleanOffers();const offersContainer=getFirstElement(".pdp-prices");if(offersContainer.hasAttribute("observed"))return;const observer=new MutationObserver(debounce(cleanOffers,50));observer.observe(offersContainer,{childList:true,subtree:true});offersContainer.setAttribute("observed","")}))}function appendFiltersContainer(filtersContainer,parentNode){filtersContainer.style="display: flex;"+"grid-gap: 15px;"+"padding: 14px 5px;";const controlStyle="display: flex;"+"align-items: center;"+"font-size: 14px;";const inputStyle="border: 1px solid #e4ebf0;"+"font-size: 14px;"+"border-radius: 8px;"+"margin-left: 7px;"+"padding: 8px 14px;";const numberInputStyle=inputStyle;// eslint-disable-line prefer-template
const checkboxInputStyle="margin-left: 7px;"+"width: 23px;"+"height: 23px;";const minCashbackDiv=createMinCashbackFilterControl(minCashbackFilter,controlStyle,numberInputStyle);const maxPriceDiv=createMaxPriceFilterControl(maxPriceFilter,controlStyle,numberInputStyle);const maxDiscountedPriceDiv=createMaxDiscountedPriceFilterControl(maxDiscountedPriceFilter,controlStyle,numberInputStyle);const minSellerRatingDiv=createMinRatingFilterControl(minSellerRatingFilter,controlStyle,numberInputStyle);const couponValueDiv=createCouponValueControl(couponValue,controlStyle,numberInputStyle);const filterEnabledDiv=createEnabledFilterControl(filterEnabled,controlStyle,checkboxInputStyle);filtersContainer.append(minCashbackDiv,maxPriceDiv,maxDiscountedPriceDiv,minSellerRatingDiv,couponValueDiv,filterEnabledDiv);parentNode.append(filtersContainer)}function cleanOffers(){const offers=getAllElements(".pdp-prices .product-offer");offers.forEach((offer=>{if(!filterEnabled.value){showElement(offer);return}const priceWrap=getFirstElement(".product-offer-price__amount",offer);const cashbackWrap=getFirstElement(".bonus-percent",offer);const sellerRatingWrap=getFirstElement(".pdp-merchant-rating-block__rating",offer);if(!priceWrap||!cashbackWrap||!sellerRatingWrap){hideElement(offer);return}const cashbackNumber=getElementInnerNumber(cashbackWrap,true);const priceElement=addBalancedCashbackPriceIfNeeded(offer,".product-offer-price__amount",cashbackNumber,couponValue.value);const price=+priceElement.getAttribute(PRICE_ATTR);const balancedCashbackPrice=+priceElement.getAttribute(BALANCED_CASHBACK_PRICE_ATTR);const sellerRatingNumber=getElementInnerNumber(sellerRatingWrap,true);const conditionToHide=isLessThanFilter(cashbackNumber,minCashbackFilter)||isGreaterThanFilter(price,maxPriceFilter)||isGreaterThanFilter(balancedCashbackPrice,maxDiscountedPriceFilter)||isLessThanFilter(sellerRatingNumber,minSellerRatingFilter);showHideElement(offer,conditionToHide)}))}


const CATEGORY_NAME=getURLPathElement(2);const nameFilter=new StoredInputValue(`${CATEGORY_NAME}-name-filter`,null,cleanList);const productList_minCashbackFilter=new StoredInputValue(`${CATEGORY_NAME}-min-cashback-filter`,null,cleanList);const productList_maxPriceFilter=new StoredInputValue(`${CATEGORY_NAME}-max-price-filter`,null,cleanList);const minDiscountFilter=new StoredInputValue(`${CATEGORY_NAME}-min-discount-filter`,null,cleanList);const sellerNameFilter=new StoredInputValue(`${CATEGORY_NAME}-seller-name-filter`,null,cleanList);const productList_filterEnabled=new InputValue(false,cleanList);const PRODUCT_CARD_LIST_CONTROLS=".catalog-listing-controls";const PRODUCT_CARD_SELECTOR=".catalog-item-desktop";const PRODUCT_CARD_PRICE_SELECTOR=".catalog-item-regular-desktop__price";const PRODUCT_CARD_CASHBACK_SELECTOR=".bonus-percent";function initProductListMods(){executeProductListMods();waitForElement(document,"#app").then((app=>{const observer=new MutationObserver(debounce(executeProductListMods));observer.observe(app,{childList:true,subtree:true})}))}function executeProductListMods(){waitForElement(document,PRODUCT_CARD_LIST_CONTROLS).then((productCardListHeader=>{appendFilterControlsIfNeeded(productCardListHeader,productList_appendFiltersContainer);const productCardListContainer=productCardListHeader.parentNode;if(productCardListContainer.hasAttribute("observed"))return;const observer=new MutationObserver(debounce(cleanList,50));observer.observe(productCardListContainer,{childList:true,subtree:true});productCardListContainer.setAttribute("observed","")}))}function productList_appendFiltersContainer(filtersContainer,parentNode){filtersContainer.style="display: flex;"+"grid-gap: 15px;"+"padding: 14px 5px;";const controlStyle="display: flex;"+"align-items: center;"+"font-size: 14px;";const inputStyle="border: 1px solid #e4ebf0;"+"font-size: 14px;"+"border-radius: 8px;"+"margin-left: 7px;"+"padding: 8px 14px;";const textInputStyle=inputStyle+// eslint-disable-line prefer-template
"width: 180px;";const numberInputStyle=inputStyle;// eslint-disable-line prefer-template
const checkboxInputStyle="margin-left: 7px;"+"width: 23px;"+"height: 23px;";const nameFilterDiv=createNameFilterControl(nameFilter,controlStyle,textInputStyle);const minCashbackDiv=createMinCashbackFilterControl(productList_minCashbackFilter,controlStyle,numberInputStyle);const maxPriceDiv=createMaxPriceFilterControl(productList_maxPriceFilter,controlStyle,numberInputStyle);const minDiscountDiv=createMinDiscountFilterControl(minDiscountFilter,controlStyle,numberInputStyle);const sellerNameFilterDiv=createSellerNameFilterControl(sellerNameFilter,controlStyle,textInputStyle);const filterEnabledDiv=createEnabledFilterControl(productList_filterEnabled,controlStyle,checkboxInputStyle);filtersContainer.append(nameFilterDiv,minCashbackDiv,maxPriceDiv,minDiscountDiv,sellerNameFilterDiv,filterEnabledDiv);parentNode.append(filtersContainer)}function cleanList(){const productCards=getAllElements(PRODUCT_CARD_SELECTOR);productCards.forEach((productCard=>{if(!productList_filterEnabled.value){showElement(productCard);return}const nameWrap=getFirstElement(".catalog-item-regular-desktop__title-link",productCard);const cashbackWrap=getFirstElement(PRODUCT_CARD_CASHBACK_SELECTOR,productCard);const discountWrap=getFirstElement(".discount-percentage__value",productCard);if(!nameWrap){hideElement(productCard);return}const name=nameWrap.innerText;const cashbackNumber=getElementInnerNumber(cashbackWrap,true,false,0);const discountValue=Math.abs(getElementInnerNumber(discountWrap,true,false,0));const priceElement=addBalancedCashbackPriceIfNeeded(productCard,PRODUCT_CARD_PRICE_SELECTOR,cashbackNumber);const balancedCashbackPrice=+priceElement.getAttribute(BALANCED_CASHBACK_PRICE_ATTR);const sellerNameWrap=getFirstElement(".merchant-info__name",productCard);const sellerNameIsNotMatchFilter=!!sellerNameWrap&&isNotMatchTextFilter(sellerNameWrap.innerText,sellerNameFilter);const conditionToHide=isNotMatchTextFilter(name,nameFilter)||isLessThanFilter(cashbackNumber,productList_minCashbackFilter)||isGreaterThanFilter(balancedCashbackPrice,productList_maxPriceFilter)||isLessThanFilter(discountValue,minDiscountFilter)||sellerNameIsNotMatchFilter;showHideElement(productCard,conditionToHide)}))}


isProductPage()?initProductPageMods():initProductListMods();function isProductPage(){return pathnameIncludes("details")}})();